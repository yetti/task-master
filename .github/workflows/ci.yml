# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters. Concurrent runs will be cancelled, ensuring only the latest
# code is being tested.
name: "Ruby on Rails CI"
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      # Add or replace any other lints here
      - name: Security audit application code
        run: bin/brakeman --format github --no-pager --no-exit-on-warn
      - name: Security audit dependencies
        run: bin/bundler-audit --update
      - name: Lint Ruby files
        run: bin/standardrb --fix
      - name: Lint ERB files
        run: bin/erblint --lint-all

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: task_master_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/task_master_test"
      PARALLEL_WORKERS: $(nproc)
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"
      - name: Install NodeJS packages
        run: yarn install --frozen-lockfile
      # Add or replace database setup steps here
      - name: Set up database schema
        run: bin/rails db:schema:load
      # Add or replace test runners here
      - name: Precompile assets
        run: bin/rails assets:precompile
      - name: Run tests
        run: bin/rake
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
